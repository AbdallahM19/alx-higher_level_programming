The ``4-print_square`` module
============================

Using ``4-print_square``
------------------------

Import function from module:

    >>> print_square = __import__('4-print_square').print_square

Test printing a square of size 4:

    >>> print_square(4)
    ####
    ####
    ####
    ####

Test printing a square of size 10:

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

Test printing a square of size 0 (should print nothing):

    >>> print_square(0)

Test printing a square of size 1:

    >>> print_square(1)
    #

Test trying to print a square of size -1 (should raise ValueError):

    >>> print_square(-1)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

# Test case 1: Positive size, size = 4
    >>> print_square(4)
    ####
    ####
    ####
    ####

# Test case 2: Positive size, size = 10
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

# Test case 3: Edge case, size = 0
    >>> print_square(0)

# Test case 4: Edge case, size = 1
    >>> print_square(1)
    #

# Test case 5: Negative size (expecting ValueError)
    >>> try:
    ...     print_square(-1)
    ... except ValueError as e:
    ...     str(e)
    'size must be >= 0'

Test additional:
Test 1:
    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'

Test 2:
    >>> print_square(-4)
    Traceback (most recent call last):
    ValueError: size must be >= 0
